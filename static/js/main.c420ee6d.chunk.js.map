{"version":3,"sources":["components/TabLink.tsx","components/TabContent.tsx","components/Tabs.tsx","App.tsx","index.tsx"],"names":["TabLink","tab","title","id","selectedTabId","useParams","className","classNames","to","TabContent","content","Tabs","tabs","selectedTab","find","map","App","location","useLocation","isActiveLink","path","pathname","element","ReactDOM","render","document","getElementById"],"mappings":"gPAQaA,EAA6B,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACnCC,EAAcD,EAAdC,MAAOC,EAAOF,EAAPE,GACPC,EAAkBC,cAAlBD,cAER,OACE,oBACE,UAAQ,MACRE,UAAWC,IAAW,CAAE,YAAaH,IAAkBD,IAFzD,SAIE,cAAC,IAAD,CACEK,GAAE,gBAAWL,GADf,SAGGD,OCdIO,EAAuC,SAAC,GAAa,IAAXR,EAAU,EAAVA,IACrD,OACE,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGL,EAAMA,EAAIS,QAAU,yBCAdC,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjCR,EAAkBC,cAAlBD,cAEFS,EAAcD,EAAKE,MAAK,SAAAb,GAAG,OAAIA,EAAIE,KAAOC,MAAkB,KAElE,OACE,qCACE,oBAAIE,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGM,EAAKG,KAAI,SAAAd,GACR,OACE,mCACE,cAAC,EAAD,CAAsBA,IAAKA,GAAbA,EAAIE,aAM5B,cAAC,EAAD,CAAYF,IAAKY,QCnBjBD,EAAO,CACX,CAAET,GAAI,QAASD,MAAO,QAASQ,QAAS,eACxC,CAAEP,GAAI,QAASD,MAAO,QAASQ,QAAS,eACxC,CAAEP,GAAI,QAASD,MAAO,QAASQ,QAAS,gBAG7BM,EAAM,WACjB,IAAMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,OAAOH,EAASI,WAAaD,GAG/B,OACE,qCAEE,qBACEd,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEE,GAAG,QACHF,UAAWC,IAAW,cAAe,CACnC,YAAaY,EAAa,WAH9B,kBASA,cAAC,IAAD,CACEX,GAAG,QACHF,UAAWC,IAAW,cAAe,CACnC,YAAaY,EAAa,WAH9B,yBAYN,qBAAKb,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEc,KAAK,QACLE,QAAS,oBAAIhB,UAAU,QAAd,yBAEX,cAAC,IAAD,CAAOc,KAAK,IAAIE,QAAS,cAAC,IAAD,CAAUd,GAAG,YACtC,cAAC,IAAD,CACEY,KAAK,QACLE,QACE,cAAC,EAAD,CAAMV,KAAMA,MAGhB,cAAC,IAAD,CAAOQ,KAAK,uBAAuBE,QAAS,cAAC,EAAD,CAAMV,KAAMA,MACxD,cAAC,IAAD,CACEQ,KAAK,IACLE,QAAS,oBAAIhB,UAAU,QAAd,yCCjEvBiB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c420ee6d.chunk.js","sourcesContent":["import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { TabData } from '../types/TabData';\n\ninterface TabProps {\n  tab: TabData,\n}\n\nexport const TabLink:React.FC<TabProps> = ({ tab }) => {\n  const { title, id } = tab;\n  const { selectedTabId } = useParams();\n\n  return (\n    <li\n      data-cy=\"Tab\"\n      className={classNames({ 'is-active': selectedTabId === id })}\n    >\n      <Link\n        to={`/tabs/${id}`}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n};\n","import { TabData } from '../types/TabData';\n\ninterface TabContentProps {\n  tab: TabData | null,\n}\n\nexport const TabContent:React.FC<TabContentProps> = ({ tab }) => {\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      {tab ? tab.content : 'Please select a tab'}\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { TabLink } from './TabLink';\nimport { TabData } from '../types/TabData';\nimport { TabContent } from './TabContent';\n\ninterface TabsProps {\n  tabs: TabData[],\n}\n\nexport const Tabs:React.FC<TabsProps> = ({ tabs }) => {\n  const { selectedTabId } = useParams();\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || null;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <>\n                <TabLink key={tab.id} tab={tab} />\n              </>\n            );\n          })}\n        </ul>\n      </div>\n      <TabContent tab={selectedTab} />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Link, Routes, Route, Navigate, useLocation,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tabs } from './components/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const location = useLocation();\n\n  const isActiveLink = (path: string) => {\n    return location.pathname === path;\n  };\n\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link\n              to=\"/home\"\n              className={classNames('navbar-item', {\n                'is-active': isActiveLink('/home'),\n              })}\n\n            >\n              Home\n            </Link>\n            <Link\n              to=\"/tabs\"\n              className={classNames('navbar-item', {\n                'is-active': isActiveLink('/tabs'),\n              })}\n            >\n              Tabs\n            </Link>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/home\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n            <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n            <Route\n              path=\"/tabs\"\n              element={(\n                <Tabs tabs={tabs} />\n              )}\n            />\n            <Route path=\"/tabs/:selectedTabId\" element={<Tabs tabs={tabs} />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}